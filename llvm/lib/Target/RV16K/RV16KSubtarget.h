// This file is copied and modified from The LLVM Compiler Infrastructure, which
// is distributed under the University of Illinois Open Source License (see
// LICENSE.TXT for details). This file is licensed under the same license.

#ifndef LLVM_LIB_TARGET_RV16K_RV16KSUBTARGET_H
#define LLVM_LIB_TARGET_RV16K_RV16KSUBTARGET_H

#include "RV16KFrameLowering.h"
#include "RV16KISelLowering.h"
#include "RV16KInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "RV16KGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class RV16KSubtarget : public RV16KGenSubtargetInfo {
  virtual void anchor();
  RV16KFrameLowering FrameLowering;
  RV16KInstrInfo InstrInfo;
  RV16KRegisterInfo RegInfo;
  RV16KTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;

  /// Initializes using the passed in CPU and feature strings so that we can
  /// use initializer lists for subtarget initialization.
  RV16KSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

public:
  // Initializes the data members to match that of the specified triple.
  RV16KSubtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const TargetMachine &TM);

  // Parses features string setting specified subtarget options. The
  // definition of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const RV16KFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const RV16KInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const RV16KRegisterInfo *getRegisterInfo() const override { return &RegInfo; }
  const RV16KTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
} // namespace llvm

#endif
