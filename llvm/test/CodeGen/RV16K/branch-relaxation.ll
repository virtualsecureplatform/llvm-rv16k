; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=rv16k -verify-machineinstrs -filetype=obj < %s \
; RUN:   -o /dev/null 2>&1
; RUN: llc -mtriple=rv16k -verify-machineinstrs < %s | FileCheck %s

define void @relax_jcc(i1 %a) {
; CHECK-LABEL: relax_jcc:
; CHECK:       # %bb.0:
; CHECK-NEXT:	li	a1, 1
; CHECK-NEXT:	and	a1, a0
; CHECK-NEXT:	cmpi	a1, 0
; CHECK-NEXT:	jne	.LBB0_1
; CHECK-NEXT:	j	.LBB0_2
; CHECK-NEXT:.LBB0_1:
; CHECK-NEXT:	#APP
; CHECK-NEXT:	.space 126
; CHECK-NEXT:	#NO_APP
; CHECK-NEXT:.LBB0_2:
; CHECK-NEXT:	jr	ra

  br i1 %a, label %iftrue, label %tail

iftrue:
  call void asm sideeffect ".space 126", ""()
  br label %tail

tail:
  ret void
}

define void @relax_jcc2(i1 %a) {
; CHECK-LABEL: relax_jcc2:
; CHECK:       # %bb.0:
; CHECK-NEXT:	li	a1, 1
; CHECK-NEXT:	and	a1, a0
; CHECK-NEXT:.LBB1_1:
; CHECK-NEXT:                                        # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:	#APP
; CHECK-NEXT:	.space 128
; CHECK-NEXT:	#NO_APP
; CHECK-NEXT:	cmpi	a1, 0
; CHECK-NEXT:	je	.LBB1_2
; CHECK-NEXT:	j	.LBB1_1
; CHECK-NEXT:.LBB1_2:
; CHECK-NEXT:	jr	ra

  br label %iftrue

iftrue:
  call void asm sideeffect ".space 128", ""()
  br label %if

if:
  br i1 %a, label %iftrue, label %tail

tail:
  ret void
}
